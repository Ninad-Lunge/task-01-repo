version: 0.2

phases:
  install:
    runtime-versions:
      python: 3.9
    commands:
      - echo "Fetching GitHub token from Secrets Manager"
      - export GITHUB_OAUTH_TOKEN=$(aws secretsmanager get-secret-value --secret-id $SCAN_REPORT_BUCKET --query SecretString --output text)
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - $(aws ecr get-login --no-include-email --region $REGION)
      - REPO_URI=$(aws ecr describe-repositories --repository-names $ECR_REPO_NAME --region $REGION --query "repositories[0].repositoryUri" --output text)
  build:
    commands:
      - echo Building the Docker image...
      - docker build -t $ECR_REPO_NAME:$IMAGE_TAG .
      - docker tag $ECR_REPO_NAME:$IMAGE_TAG $REPO_URI:$IMAGE_TAG
      - docker push $REPO_URI:$IMAGE_TAG
  post_build:
    commands:
      - echo Waiting for image scan to complete...
      - for i in {1..10}; do
          STATUS=$(aws ecr describe-image-scan-findings --repository-name $ECR_REPO_NAME --image-id imageTag=$IMAGE_TAG --region $REGION --query 'imageScanStatus.status' --output text);
          echo "Scan status: $STATUS";
          if [ "$STATUS" == "COMPLETE" ]; then break; fi;
          sleep 10;
        done
      - echo Getting scan findings...
      - aws ecr describe-image-scan-findings \
          --repository-name $ECR_REPO_NAME \
          --image-id imageTag=$IMAGE_TAG \
          --region $REGION > scan-findings.json
      - HIGH_OR_CRITICAL=$(jq '[.imageScanFindings.findings[] | select(.severity=="HIGH" or .severity=="CRITICAL")] | length' scan-findings.json)
      - echo "$HIGH_OR_CRITICAL high/critical vulnerabilities found."
      - aws s3 cp scan-findings.json s3://$REPORT_BUCKET/scan-findings-$(date +%s).json
      - if [ "$HIGH_OR_CRITICAL" -gt 0 ]; then
          echo "Vulnerabilities too high. Failing build.";
          exit 1;
        fi
